{"meta":{"title":"Zephyr's Blog","subtitle":"a tech blog","description":"This is a blog.","author":"Zephyr, Z","url":"http://example.com","root":"/"},"pages":[{"title":"关于我","date":"2023-07-18T13:22:03.000Z","updated":"2023-07-18T13:27:39.215Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"一个博客。 不定期更新一些学习笔记 不定期更新一些技术问题 本科期间写的csdn博客：https://sophia.blog.csdn.net/； 有时间看看有没有办法迁移到这个博客里。 项目来源：https://github.com/iTimeTraveler/hexo-theme-hiero"},{"title":"Categories","date":"2023-07-18T08:18:03.000Z","updated":"2023-07-18T13:28:05.224Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":"暂无分类"},{"title":"Tags","date":"2023-07-18T08:17:24.000Z","updated":"2023-07-18T13:28:11.868Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":"暂无标签"}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2022-12-10T06:04:42.333Z","updated":"2023-07-18T16:26:08.983Z","comments":true,"path":"2022/12/10/hello-world/","link":"","permalink":"http://example.com/2022/12/10/hello-world/","excerpt":"hello world","text":"hello world 快速上手创建一个笔记1hexo new &quot;hello_world.md&quot; More info: Writing 运行本地服务器1$ hexo server More info: Server 远程上传笔记到github.io12345678#清除缓存，网页正常情况下可以忽略此条命令，执行该指令后，会删掉站点根目录下的public文件夹。hexo clean #generate静态网页（静态网页这里指没有前端后端的网页而不是静止），该命令把md编译为html并存到public文件目录下。hexo g #将本地的更改部署到远端服务器（需要一点时间，请过一会再刷新网页）。hexo d # 也可以直接使用命令：hexo g -d More info: Generating 12345#include &lt;iostream&gt;using namespace std;int main () &#123; cout &lt;&lt; &quot;hello world&quot; &lt;&lt; endl;&#125;","categories":[{"name":"github","slug":"github","permalink":"http://example.com/categories/github/"},{"name":"hexo","slug":"github/hexo","permalink":"http://example.com/categories/github/hexo/"}],"tags":[{"name":"github","slug":"github","permalink":"http://example.com/tags/github/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]},{"title":"Mysql\\Redis\\Go的安装过程","slug":"MysqlRedisGo-Install","date":"2022-12-07T13:21:56.982Z","updated":"2023-07-18T16:28:13.898Z","comments":true,"path":"2022/12/07/MysqlRedisGo-Install/","link":"","permalink":"http://example.com/2022/12/07/MysqlRedisGo-Install/","excerpt":"mysql\\redis\\go的安装笔记","text":"mysql\\redis\\go的安装笔记 一. 安装MySQL1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677781. 安装mysql服务器 sudo apt updatesudo apt install mysql-server2. 查看Mysql服务器运行状态：sudo systemctl status mysql3. 安装成功后开始配置mysql：sudo mysql_secure_installation接下来选择yes就是配置密码强度和设置密码，no就是使用其他密码。但是经过测试，不管是yes还是no大概率都会出现以下bug： ... Failed! Error: SET PASSWORD has no significance for user &#x27;root&#x27;@&#x27;localhost&#x27; as the authentication method used doesn&#x27;t store authentication data in the MySQL server. Please consider using ALTER USER instead if you want to change authentication parameters.&#x27;&#x27;&#x27;解决bug部分：先退出上述命令行，重新打开终端，sudo mysqlALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;your_password&#x27;; your_password 部分 请替换为个人的密码接下来回到配置mysql部分如果在上面配置了密码强度，最后导致密码也无法配置，还需要进入数据库修改表&#x27;&#x27;&#x27;4. 重新配置mysqlsudo mysql_secure_installationEnter password for user root: 输入刚才配置的个人密码ALIDATE PASSWORD COMPONENT can be used to test passwordsand improve security. It checks the strength of passwordand allows the users to set only those passwords which aresecure enough. Would you like to setup VALIDATE PASSWORD component?Press y|Y for Yes, any other key for No: noUsing existing password for root.Change the password for root ? ((Press y|Y for Yes, any other key for No) : n ... skipping.By default, a MySQL installation has an anonymous user,allowing anyone to log into MySQL without having to havea user account created for them. This is intended only fortesting, and to make the installation go a bit smoother.You should remove them before moving into a productionenvironment.Remove anonymous users? (Press y|Y for Yes, any other key for No) : n ... skipping.Normally, root should only be allowed to connect from&#x27;localhost&#x27;. This ensures that someone cannot guess atthe root password from the network.Disallow root login remotely? (Press y|Y for Yes, any other key for No) : n ... skipping.By default, MySQL comes with a database named &#x27;test&#x27; thatanyone can access. This is also intended only for testing,and should be removed before moving into a productionenvironment.Remove test database and access to it? (Press y|Y for Yes, any other key for No) : n ... skipping.Reloading the privilege tables will ensure that all changesmade so far will take effect immediately.Reload privilege tables now? (Press y|Y for Yes, any other key for No) : ySuccess.All done! 5. 命令登录mysql：mysql -u root -p 二. 安装Redis123456789101112131415161718192021222324252627282930313233343536373839404142431. 安装依赖sudo apt install -y gcc tclsudo apt-get install -y gccsudo apt-get install -y g++2. 切换目录cd /usr/local/src/2. 下载wget https://download.redis.io/releases/redis-6.2.6.tar.gz3. 解压tar xzf redis-6.2.6.tar.gz5. 进入安装目录cd redis-6.2.66. 编译redissudo make7. 测试编译是否成功sudo make test8. 安装sudo make install9. 配置redis如果上面都没有出错...那么应该就安装成功了。接下来进行配置cd /usr/local/src/redis-6.2.6先备份一下redis.conf,防止改坏了cp redis.conf redis.conf.bck编辑redis.confnano redis.conf找到daemonize no -&gt; 修改为yes# requirepass foobared -&gt;取消注释，把密码修改为个人密码。Ctrl + O保存，Ctrl + X 退出。10. 以新的配置文件启动redisredis-server redis.conf 三. 配置go环境123456789101112131415161718192021222324251. 下载压缩包.(个人使用1.18.5)wget -c https://go.dev/dl/go1.18.5.linux-amd64.tar.gz (翻墙情况下)如果网络环境不允许，还是去官网下载，或者找个镜像源。https://go.dev/dl/2. 解压sudo tar xzf go1.18.5.linux-amd64.tar.gz -C /usr/local/3. 修改profilesudo nano /etc/profile将 `export PATH=$PATH:/usr/local/go/bin` 加入到文件末尾4. 重新启动查看go版本号cd /erc/source ~/.profilego version输出：go version go1.18.5 linux/amd645. 为了解决每次打开终端都需要执行source ~/.profile，可以选择以下方法解决此问题：sudo nano ~/.bashrc在文件末尾加入：if [ -f /etc/profile ]; then . /etc/profilefi然后重启系统。","categories":[{"name":"mysql","slug":"mysql","permalink":"http://example.com/categories/mysql/"},{"name":"redis","slug":"mysql/redis","permalink":"http://example.com/categories/mysql/redis/"},{"name":"go","slug":"mysql/redis/go","permalink":"http://example.com/categories/mysql/redis/go/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://example.com/tags/mysql/"},{"name":"redis","slug":"redis","permalink":"http://example.com/tags/redis/"},{"name":"go","slug":"go","permalink":"http://example.com/tags/go/"}]}],"categories":[{"name":"github","slug":"github","permalink":"http://example.com/categories/github/"},{"name":"hexo","slug":"github/hexo","permalink":"http://example.com/categories/github/hexo/"},{"name":"mysql","slug":"mysql","permalink":"http://example.com/categories/mysql/"},{"name":"redis","slug":"mysql/redis","permalink":"http://example.com/categories/mysql/redis/"},{"name":"go","slug":"mysql/redis/go","permalink":"http://example.com/categories/mysql/redis/go/"}],"tags":[{"name":"github","slug":"github","permalink":"http://example.com/tags/github/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"mysql","slug":"mysql","permalink":"http://example.com/tags/mysql/"},{"name":"redis","slug":"redis","permalink":"http://example.com/tags/redis/"},{"name":"go","slug":"go","permalink":"http://example.com/tags/go/"}]}